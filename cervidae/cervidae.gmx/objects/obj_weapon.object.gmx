<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pea</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init values

wp_types = 5; // Number of total wps in the game

wp_current = 1;

wp_sprite[0] = "";
wp_sprite[1] = spr_pea;
wp_sprite[2] = spr_triple;
wp_sprite[3] = spr_biggun;
wp_sprite[4] = spr_shotty;
wp_sprite[5] = spr_grenade;

wp_x[0] = 0; wp_y[0] = 0; // gun offset from the center of the player sprite
wp_x[1] = 4; wp_y[1] = 2;
wp_x[2] = 4; wp_y[2] = 2;
wp_x[3] = 4; wp_y[3] = 2;
wp_x[4] = 4; wp_y[4] = 2;
wp_x[5] = 4; wp_y[5] = 2;

wp_bullet_x[0] = 0;  wp_bullet_y[0] = 0; // bullet offset from the origin of the gun
wp_bullet_x[1] = 8;  wp_bullet_y[1] = 0;
wp_bullet_x[2] = 8;  wp_bullet_y[2] = 0;
wp_bullet_x[3] = 8;  wp_bullet_y[3] = 0;
wp_bullet_x[4] = 11; wp_bullet_y[4] = 0;
wp_bullet_x[5] = 0;  wp_bullet_y[5] = 0;

wp_bullet_s[0] = mask_block; // bullet sprites
wp_bullet_s[1] = spr_bullet_pea;
wp_bullet_s[2] = spr_bullet_thin;
wp_bullet_s[3] = spr_bullet_thick;
wp_bullet_s[4] = spr_bullet_pea;
wp_bullet_s[5] = spr_grenade;

wp_damage[0] = 0; // bullet damage
wp_damage[1] = 16;
wp_damage[2] = 10;
wp_damage[3] = 50;
wp_damage[4] = 8;
wp_damage[5] = 65;

wp_speed[0] = 0;
wp_speed[1] = 12;
wp_speed[2] = 9;
wp_speed[3] = 4;
wp_speed[4] = 8;
wp_speed[5] = 5; // physics object

wp_aimSpeed[0] = 0.20;
wp_aimSpeed[1] = 0.20;
wp_aimSpeed[2] = 0.20;
wp_aimSpeed[3] = 0.10;
wp_aimSpeed[4] = 0.22;
wp_aimSpeed[5] = 0.08;

wp_recoil[0] = 0;
wp_recoil[1] = .35;
wp_recoil[2] = .25;
wp_recoil[3] = 2;
wp_recoil[4] = 1.5;
wp_recoil[5] = 0;

sprite_index = wp_sprite[wp_current];

canFire = true;

dir = 1;
lastDir = 1;

// sprite rotation stuff
rot = 0;
realRot = 0;
targetRot = 0;

// Create reticle
instance_create(0,0,obj_reticle);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// This alarm is just used for general timing things
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Weapon debug

// Switch weapons

if (keyboard_check_pressed(ord("U")) || gamepad_button_check_pressed(0,gp_shoulderl))
{
    wp_current--;
    if (wp_current &lt; 0) wp_current = wp_types;
}

if (keyboard_check_pressed(ord("I")) || gamepad_button_check_pressed(0,gp_shoulderr))
{
    wp_current++;
    if (wp_current &gt; wp_types) wp_current = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Ongoing weapon stuff

// Cooldown timer
if (alarm[0] &lt;= 0){
        canFire = true;
}

// triple
if (wp_current == 2){
    if (alarm[0] mod 5 == 0 &amp;&amp; alarm[0] &gt; 0){
        var bullx = obj_weapon.x + lengthdir_x(8,obj_weapon.rot*obj_weapon.dir + (90 - 90*obj_weapon.dir));
        var bully = obj_weapon.y + lengthdir_y(8,obj_weapon.rot*obj_weapon.dir);
        weapon_shoot_triple(bullx,bully,1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sprite

dir = obj_player.dir;

// Set sprite
sprite_index = wp_sprite[wp_current];

// Determine aim
if (global.stick_up){
    targetRot = 75*dir;
} else if (global.stick_down) {
    targetRot = -75*dir;
} else {
    targetRot = 0;
}

// turn gun
if (lastDir != dir) {rot *= -1;}
rot += (targetRot-rot)*wp_aimSpeed[wp_current];

// update Lastdir
lastDir = dir;

draw_sprite_ext(sprite_index,-1,x,y,dir,1,rot,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
