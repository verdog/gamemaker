<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_grenade</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init values

// sprite id, used to determine particles
sid = 0;

spd_x = 0;
spd_y = 0;

grav = global.grav/2;

xscale = 1;
yscale = 1;

if (instance_exists(obj_weapon)){
    damage = obj_weapon.wp_damage[obj_weapon.wp_current];
} else {
    damage = 16;
}

iangle = random(360); // image angle
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy

repeat(8){
    prts_poof_big(x,y,random_range(2,4),random(360));
    prts_poof_mid(x,y,random_range(0,3),random(360));
}

screenShake(10,8);

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement/damage

// walls
if (grid_place_meeting(x+spd_x,y))
{
    if (!grid_place_meeting(x,y)){
        while(!grid_place_meeting(x+sign(spd_x),y))
        {
            x += sign(spd_x);   
        }
    }
    
    if (abs(spd_x) &gt; 2){
        repeat(5){
            prts_poof(x,y,2,180+random_range(-45,45) + 180/pi*-arctan2(spd_y,spd_x));
        }
        prts_poof_mid(x,y,1,180+random_range(-12,12) + 180/pi*-arctan2(spd_y,spd_x));
    }
    
    iangle += 15;
    spd_y *= .6;
    spd_x *= -.7;
}

// gravity

spd_y += grav;

if (grid_place_meeting(x,y+spd_y))
{
    if (!grid_place_meeting(x,y)){
        while(!grid_place_meeting(x,y+sign(spd_y)))
        {
            y += sign(spd_y);   
        }
    }
    
    if (abs(spd_y) &gt; 2){
        repeat(5){
            prts_poof(x,y,2,180+random_range(-45,45) + 180/pi*-arctan2(spd_y,spd_x));
        }
        prts_poof_mid(x,y,1,180+random_range(-12,12) + 180/pi*-arctan2(spd_y,spd_x));
    }
    
    iangle += 60 * sign(spd_x) * getSpeed() * .3;
    spd_x *= .6;
    spd_y *= -.7;
}

x += spd_x;
y += spd_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// sprite

draw_sprite_ext(sprite_index,-1,x,y,1,1,iangle,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
